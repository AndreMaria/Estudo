[0m[[0m[31merror[0m] [0m[0mC:\Users\Andre\Documents\GitHub\Estudo\RESTAPIWithAkkaHttp\src\main\scala\MyApplication.scala:26:52: type mismatch;[0m
[0m[[0m[31merror[0m] [0m[0m found   : repository.User.type[0m
[0m[[0m[31merror[0m] [0m[0m required: (?, ?) => ?[0m
[0m[[0m[31merror[0m] [0m[0m Note: implicit value userFormat is not applicable here because it comes after the application point and it lacks an explicit result type[0m
[0m[[0m[31merror[0m] [0m[0m  implicit val userFormat = jsonFormat2(repository.User)[0m
[0m[[0m[31merror[0m] [0m[0m                                                   ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Andre\Documents\GitHub\Estudo\RESTAPIWithAkkaHttp\src\main\scala\MyApplication.scala:27:41: could not find implicit value for evidence parameter of type UserJsonSupport.this.JF[Seq[repository.User]][0m
[0m[[0m[31merror[0m] [0m[0m  implicit val usersFormat = jsonFormat1(repository.Users)[0m
[0m[[0m[31merror[0m] [0m[0m                                        ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\Andre\Documents\GitHub\Estudo\RESTAPIWithAkkaHttp\src\main\scala\MyApplication.scala:87:20: could not find implicit value for parameter um: akka.http.scaladsl.unmarshalling.FromRequestUnmarshaller[repository.User][0m
[0m[[0m[31merror[0m] [0m[0m          entity(as[repository.User]) {[0m
[0m[[0m[31merror[0m] [0m[0m                   ^[0m
[0m[[0m[31merror[0m] [0m[0mthree errors found[0m
